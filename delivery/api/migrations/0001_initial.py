# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-08-06 09:33
from __future__ import unicode_literals

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=1024)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now)),
                ('post_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('image', models.ImageField(upload_to='photos/')),
                ('type', models.SmallIntegerField(choices=[(1, 'Food'), (2, 'Nonfood')])),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('price', models.IntegerField()),
                ('addons', models.ManyToManyField(related_name='_item_addons_+', to='api.Item')),
            ],
        ),
        migrations.CreateModel(
            name='ItemQuantity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField()),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Item')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=512)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=datetime.datetime.now)),
                ('status', models.SmallIntegerField(choices=[(1, 'pending acceptance'), (2, 'accepted'), (3, 'pending payment approval'), (4, 'completed'), (5, 'cancelled')])),
                ('gmv', models.FloatField()),
                ('driver_cut', models.FloatField()),
                ('management_cut', models.FloatField()),
                ('tips', models.FloatField()),
                ('total_cost', models.FloatField()),
                ('driver_profit', models.FloatField()),
                ('driver_payout', models.FloatField()),
                ('item_quantities', models.ManyToManyField(blank=True, to='api.ItemQuantity')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('push_id', models.CharField(max_length=128)),
                ('name', models.CharField(max_length=128)),
                ('avatar', models.ImageField(blank=True, upload_to='avatars/')),
                ('phone', models.CharField(max_length=128)),
                ('token', models.CharField(max_length=32)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now)),
                ('last_login_date', models.DateTimeField(default=datetime.datetime.now)),
                ('is_privacy', models.BooleanField(default=False)),
                ('is_eula', models.BooleanField(default=False)),
                ('is_verify', models.BooleanField(default=False)),
                ('is_driver', models.BooleanField(default=False)),
                ('schedule', models.CharField(blank=True, max_length=2048, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:\\,\\d+)*\\Z', 32), code='invalid', message='Enter only digits separated by commas.')])),
                ('orders', models.ManyToManyField(blank=True, to='api.Order')),
                ('referral', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='api.Profile')),
            ],
        ),
        migrations.CreateModel(
            name='Promo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=128)),
                ('type', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(5)])),
                ('comment', models.CharField(max_length=1024)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now)),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('hours_of_operation', models.CharField(max_length=2048, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:\\,\\d+)*\\Z', 32), code='invalid', message='Enter only digits separated by commas.')])),
            ],
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('image', models.ImageField(upload_to='store_images/')),
                ('hours_of_operation', models.CharField(max_length=2048, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:\\,\\d+)*\\Z', 32), code='invalid', message='Enter only digits separated by commas.')])),
                ('is_partnered', models.BooleanField(default=False)),
                ('schools', models.ManyToManyField(blank=True, to='api.School')),
            ],
        ),
        migrations.AddField(
            model_name='profile',
            name='reviews',
            field=models.ManyToManyField(blank=True, to='api.Review'),
        ),
        migrations.AddField(
            model_name='profile',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.School'),
        ),
        migrations.AddField(
            model_name='profile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='order',
            name='promo_code',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Promo'),
        ),
        migrations.AddField(
            model_name='order',
            name='review',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Review'),
        ),
        migrations.AddField(
            model_name='order',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Store'),
        ),
        migrations.AddField(
            model_name='message',
            name='receiver',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='message_receiver', to='api.Profile'),
        ),
        migrations.AddField(
            model_name='message',
            name='sender',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='message_sender', to='api.Profile'),
        ),
        migrations.AddField(
            model_name='item',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Store'),
        ),
        migrations.AddField(
            model_name='announcement',
            name='schools',
            field=models.ManyToManyField(blank=True, to='api.School'),
        ),
    ]
